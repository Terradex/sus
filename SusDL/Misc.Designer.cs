//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace PilotDL {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("Misc")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class Misc : global::System.Data.DataSet {
        
        private sp_053_list_confirmationsDataTable tablesp_053_list_confirmations;
        
        private sp_051_create_confirmationRecordDataTable tablesp_051_create_confirmationRecord;
        
        private sp_052_displayConfirmationDataTable tablesp_052_displayConfirmation;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Misc() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected Misc(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["sp_053_list_confirmations"] != null)) {
                    base.Tables.Add(new sp_053_list_confirmationsDataTable(ds.Tables["sp_053_list_confirmations"]));
                }
                if ((ds.Tables["sp_051_create_confirmationRecord"] != null)) {
                    base.Tables.Add(new sp_051_create_confirmationRecordDataTable(ds.Tables["sp_051_create_confirmationRecord"]));
                }
                if ((ds.Tables["sp_052_displayConfirmation"] != null)) {
                    base.Tables.Add(new sp_052_displayConfirmationDataTable(ds.Tables["sp_052_displayConfirmation"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public sp_053_list_confirmationsDataTable sp_053_list_confirmations {
            get {
                return this.tablesp_053_list_confirmations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public sp_051_create_confirmationRecordDataTable sp_051_create_confirmationRecord {
            get {
                return this.tablesp_051_create_confirmationRecord;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public sp_052_displayConfirmationDataTable sp_052_displayConfirmation {
            get {
                return this.tablesp_052_displayConfirmation;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            Misc cln = ((Misc)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["sp_053_list_confirmations"] != null)) {
                    base.Tables.Add(new sp_053_list_confirmationsDataTable(ds.Tables["sp_053_list_confirmations"]));
                }
                if ((ds.Tables["sp_051_create_confirmationRecord"] != null)) {
                    base.Tables.Add(new sp_051_create_confirmationRecordDataTable(ds.Tables["sp_051_create_confirmationRecord"]));
                }
                if ((ds.Tables["sp_052_displayConfirmation"] != null)) {
                    base.Tables.Add(new sp_052_displayConfirmationDataTable(ds.Tables["sp_052_displayConfirmation"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablesp_053_list_confirmations = ((sp_053_list_confirmationsDataTable)(base.Tables["sp_053_list_confirmations"]));
            if ((initTable == true)) {
                if ((this.tablesp_053_list_confirmations != null)) {
                    this.tablesp_053_list_confirmations.InitVars();
                }
            }
            this.tablesp_051_create_confirmationRecord = ((sp_051_create_confirmationRecordDataTable)(base.Tables["sp_051_create_confirmationRecord"]));
            if ((initTable == true)) {
                if ((this.tablesp_051_create_confirmationRecord != null)) {
                    this.tablesp_051_create_confirmationRecord.InitVars();
                }
            }
            this.tablesp_052_displayConfirmation = ((sp_052_displayConfirmationDataTable)(base.Tables["sp_052_displayConfirmation"]));
            if ((initTable == true)) {
                if ((this.tablesp_052_displayConfirmation != null)) {
                    this.tablesp_052_displayConfirmation.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "Misc";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/Misc.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablesp_053_list_confirmations = new sp_053_list_confirmationsDataTable();
            base.Tables.Add(this.tablesp_053_list_confirmations);
            this.tablesp_051_create_confirmationRecord = new sp_051_create_confirmationRecordDataTable();
            base.Tables.Add(this.tablesp_051_create_confirmationRecord);
            this.tablesp_052_displayConfirmation = new sp_052_displayConfirmationDataTable();
            base.Tables.Add(this.tablesp_052_displayConfirmation);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializesp_053_list_confirmations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializesp_051_create_confirmationRecord() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializesp_052_displayConfirmation() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            Misc ds = new Misc();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void sp_053_list_confirmationsRowChangeEventHandler(object sender, sp_053_list_confirmationsRowChangeEvent e);
        
        public delegate void sp_051_create_confirmationRecordRowChangeEventHandler(object sender, sp_051_create_confirmationRecordRowChangeEvent e);
        
        public delegate void sp_052_displayConfirmationRowChangeEventHandler(object sender, sp_052_displayConfirmationRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class sp_053_list_confirmationsDataTable : global::System.Data.TypedTableBase<sp_053_list_confirmationsRow> {
            
            private global::System.Data.DataColumn columnConfirmationID;
            
            private global::System.Data.DataColumn columnCategoryLabel;
            
            private global::System.Data.DataColumn columnBrandName;
            
            private global::System.Data.DataColumn columnRebateAmount;
            
            private global::System.Data.DataColumn columnUpdateDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sp_053_list_confirmationsDataTable() {
                this.TableName = "sp_053_list_confirmations";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sp_053_list_confirmationsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected sp_053_list_confirmationsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConfirmationIDColumn {
                get {
                    return this.columnConfirmationID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CategoryLabelColumn {
                get {
                    return this.columnCategoryLabel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BrandNameColumn {
                get {
                    return this.columnBrandName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RebateAmountColumn {
                get {
                    return this.columnRebateAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdateDateColumn {
                get {
                    return this.columnUpdateDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sp_053_list_confirmationsRow this[int index] {
                get {
                    return ((sp_053_list_confirmationsRow)(this.Rows[index]));
                }
            }
            
            public event sp_053_list_confirmationsRowChangeEventHandler sp_053_list_confirmationsRowChanging;
            
            public event sp_053_list_confirmationsRowChangeEventHandler sp_053_list_confirmationsRowChanged;
            
            public event sp_053_list_confirmationsRowChangeEventHandler sp_053_list_confirmationsRowDeleting;
            
            public event sp_053_list_confirmationsRowChangeEventHandler sp_053_list_confirmationsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addsp_053_list_confirmationsRow(sp_053_list_confirmationsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sp_053_list_confirmationsRow Addsp_053_list_confirmationsRow(string CategoryLabel, string BrandName, decimal RebateAmount, System.DateTime UpdateDate) {
                sp_053_list_confirmationsRow rowsp_053_list_confirmationsRow = ((sp_053_list_confirmationsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CategoryLabel,
                        BrandName,
                        RebateAmount,
                        UpdateDate};
                rowsp_053_list_confirmationsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowsp_053_list_confirmationsRow);
                return rowsp_053_list_confirmationsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                sp_053_list_confirmationsDataTable cln = ((sp_053_list_confirmationsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new sp_053_list_confirmationsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnConfirmationID = base.Columns["ConfirmationID"];
                this.columnCategoryLabel = base.Columns["CategoryLabel"];
                this.columnBrandName = base.Columns["BrandName"];
                this.columnRebateAmount = base.Columns["RebateAmount"];
                this.columnUpdateDate = base.Columns["UpdateDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnConfirmationID = new global::System.Data.DataColumn("ConfirmationID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConfirmationID);
                this.columnCategoryLabel = new global::System.Data.DataColumn("CategoryLabel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategoryLabel);
                this.columnBrandName = new global::System.Data.DataColumn("BrandName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrandName);
                this.columnRebateAmount = new global::System.Data.DataColumn("RebateAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRebateAmount);
                this.columnUpdateDate = new global::System.Data.DataColumn("UpdateDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateDate);
                this.columnConfirmationID.AutoIncrement = true;
                this.columnConfirmationID.AutoIncrementSeed = -1;
                this.columnConfirmationID.AutoIncrementStep = -1;
                this.columnConfirmationID.AllowDBNull = false;
                this.columnConfirmationID.ReadOnly = true;
                this.columnCategoryLabel.MaxLength = 50;
                this.columnBrandName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sp_053_list_confirmationsRow Newsp_053_list_confirmationsRow() {
                return ((sp_053_list_confirmationsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new sp_053_list_confirmationsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(sp_053_list_confirmationsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.sp_053_list_confirmationsRowChanged != null)) {
                    this.sp_053_list_confirmationsRowChanged(this, new sp_053_list_confirmationsRowChangeEvent(((sp_053_list_confirmationsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.sp_053_list_confirmationsRowChanging != null)) {
                    this.sp_053_list_confirmationsRowChanging(this, new sp_053_list_confirmationsRowChangeEvent(((sp_053_list_confirmationsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.sp_053_list_confirmationsRowDeleted != null)) {
                    this.sp_053_list_confirmationsRowDeleted(this, new sp_053_list_confirmationsRowChangeEvent(((sp_053_list_confirmationsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.sp_053_list_confirmationsRowDeleting != null)) {
                    this.sp_053_list_confirmationsRowDeleting(this, new sp_053_list_confirmationsRowChangeEvent(((sp_053_list_confirmationsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removesp_053_list_confirmationsRow(sp_053_list_confirmationsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Misc ds = new Misc();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "sp_053_list_confirmationsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class sp_051_create_confirmationRecordDataTable : global::System.Data.TypedTableBase<sp_051_create_confirmationRecordRow> {
            
            private global::System.Data.DataColumn columnConfirmationID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sp_051_create_confirmationRecordDataTable() {
                this.TableName = "sp_051_create_confirmationRecord";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sp_051_create_confirmationRecordDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected sp_051_create_confirmationRecordDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConfirmationIDColumn {
                get {
                    return this.columnConfirmationID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sp_051_create_confirmationRecordRow this[int index] {
                get {
                    return ((sp_051_create_confirmationRecordRow)(this.Rows[index]));
                }
            }
            
            public event sp_051_create_confirmationRecordRowChangeEventHandler sp_051_create_confirmationRecordRowChanging;
            
            public event sp_051_create_confirmationRecordRowChangeEventHandler sp_051_create_confirmationRecordRowChanged;
            
            public event sp_051_create_confirmationRecordRowChangeEventHandler sp_051_create_confirmationRecordRowDeleting;
            
            public event sp_051_create_confirmationRecordRowChangeEventHandler sp_051_create_confirmationRecordRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addsp_051_create_confirmationRecordRow(sp_051_create_confirmationRecordRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sp_051_create_confirmationRecordRow Addsp_051_create_confirmationRecordRow() {
                sp_051_create_confirmationRecordRow rowsp_051_create_confirmationRecordRow = ((sp_051_create_confirmationRecordRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null};
                rowsp_051_create_confirmationRecordRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowsp_051_create_confirmationRecordRow);
                return rowsp_051_create_confirmationRecordRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                sp_051_create_confirmationRecordDataTable cln = ((sp_051_create_confirmationRecordDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new sp_051_create_confirmationRecordDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnConfirmationID = base.Columns["ConfirmationID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnConfirmationID = new global::System.Data.DataColumn("ConfirmationID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConfirmationID);
                this.columnConfirmationID.AutoIncrement = true;
                this.columnConfirmationID.AutoIncrementSeed = -1;
                this.columnConfirmationID.AutoIncrementStep = -1;
                this.columnConfirmationID.AllowDBNull = false;
                this.columnConfirmationID.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sp_051_create_confirmationRecordRow Newsp_051_create_confirmationRecordRow() {
                return ((sp_051_create_confirmationRecordRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new sp_051_create_confirmationRecordRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(sp_051_create_confirmationRecordRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.sp_051_create_confirmationRecordRowChanged != null)) {
                    this.sp_051_create_confirmationRecordRowChanged(this, new sp_051_create_confirmationRecordRowChangeEvent(((sp_051_create_confirmationRecordRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.sp_051_create_confirmationRecordRowChanging != null)) {
                    this.sp_051_create_confirmationRecordRowChanging(this, new sp_051_create_confirmationRecordRowChangeEvent(((sp_051_create_confirmationRecordRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.sp_051_create_confirmationRecordRowDeleted != null)) {
                    this.sp_051_create_confirmationRecordRowDeleted(this, new sp_051_create_confirmationRecordRowChangeEvent(((sp_051_create_confirmationRecordRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.sp_051_create_confirmationRecordRowDeleting != null)) {
                    this.sp_051_create_confirmationRecordRowDeleting(this, new sp_051_create_confirmationRecordRowChangeEvent(((sp_051_create_confirmationRecordRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removesp_051_create_confirmationRecordRow(sp_051_create_confirmationRecordRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Misc ds = new Misc();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "sp_051_create_confirmationRecordDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class sp_052_displayConfirmationDataTable : global::System.Data.TypedTableBase<sp_052_displayConfirmationRow> {
            
            private global::System.Data.DataColumn columnConfirmationID;
            
            private global::System.Data.DataColumn columnUtilityName;
            
            private global::System.Data.DataColumn columnIncentiveName;
            
            private global::System.Data.DataColumn columnSummary;
            
            private global::System.Data.DataColumn columnContactFName;
            
            private global::System.Data.DataColumn columnContactLName;
            
            private global::System.Data.DataColumn columnContactDept;
            
            private global::System.Data.DataColumn columnContactStreet;
            
            private global::System.Data.DataColumn columnContactCity;
            
            private global::System.Data.DataColumn columnContactState;
            
            private global::System.Data.DataColumn columnContactZip;
            
            private global::System.Data.DataColumn columnContactPhone;
            
            private global::System.Data.DataColumn columnContactWebsite;
            
            private global::System.Data.DataColumn columnFName;
            
            private global::System.Data.DataColumn columnLName;
            
            private global::System.Data.DataColumn columnStreet;
            
            private global::System.Data.DataColumn columnApartment;
            
            private global::System.Data.DataColumn columnCity;
            
            private global::System.Data.DataColumn columnState;
            
            private global::System.Data.DataColumn columnZIP;
            
            private global::System.Data.DataColumn columnPhone;
            
            private global::System.Data.DataColumn columnlogonEmail;
            
            private global::System.Data.DataColumn columnUtilityAccountNumber;
            
            private global::System.Data.DataColumn columnB_FName;
            
            private global::System.Data.DataColumn columnB_LName;
            
            private global::System.Data.DataColumn columnB_Street;
            
            private global::System.Data.DataColumn columnB_Apartment;
            
            private global::System.Data.DataColumn columnB_City;
            
            private global::System.Data.DataColumn columnB_State;
            
            private global::System.Data.DataColumn columnB_ZIP;
            
            private global::System.Data.DataColumn columnB_Phone;
            
            private global::System.Data.DataColumn columnB_email;
            
            private global::System.Data.DataColumn columnCategoryLabel;
            
            private global::System.Data.DataColumn columnBrandName;
            
            private global::System.Data.DataColumn columnRatingModelNumber;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sp_052_displayConfirmationDataTable() {
                this.TableName = "sp_052_displayConfirmation";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sp_052_displayConfirmationDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected sp_052_displayConfirmationDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConfirmationIDColumn {
                get {
                    return this.columnConfirmationID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UtilityNameColumn {
                get {
                    return this.columnUtilityName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IncentiveNameColumn {
                get {
                    return this.columnIncentiveName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SummaryColumn {
                get {
                    return this.columnSummary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactFNameColumn {
                get {
                    return this.columnContactFName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactLNameColumn {
                get {
                    return this.columnContactLName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactDeptColumn {
                get {
                    return this.columnContactDept;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactStreetColumn {
                get {
                    return this.columnContactStreet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactCityColumn {
                get {
                    return this.columnContactCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactStateColumn {
                get {
                    return this.columnContactState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactZipColumn {
                get {
                    return this.columnContactZip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactPhoneColumn {
                get {
                    return this.columnContactPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactWebsiteColumn {
                get {
                    return this.columnContactWebsite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FNameColumn {
                get {
                    return this.columnFName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LNameColumn {
                get {
                    return this.columnLName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StreetColumn {
                get {
                    return this.columnStreet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApartmentColumn {
                get {
                    return this.columnApartment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZIPColumn {
                get {
                    return this.columnZIP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhoneColumn {
                get {
                    return this.columnPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn logonEmailColumn {
                get {
                    return this.columnlogonEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UtilityAccountNumberColumn {
                get {
                    return this.columnUtilityAccountNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn B_FNameColumn {
                get {
                    return this.columnB_FName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn B_LNameColumn {
                get {
                    return this.columnB_LName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn B_StreetColumn {
                get {
                    return this.columnB_Street;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn B_ApartmentColumn {
                get {
                    return this.columnB_Apartment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn B_CityColumn {
                get {
                    return this.columnB_City;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn B_StateColumn {
                get {
                    return this.columnB_State;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn B_ZIPColumn {
                get {
                    return this.columnB_ZIP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn B_PhoneColumn {
                get {
                    return this.columnB_Phone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn B_emailColumn {
                get {
                    return this.columnB_email;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CategoryLabelColumn {
                get {
                    return this.columnCategoryLabel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BrandNameColumn {
                get {
                    return this.columnBrandName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RatingModelNumberColumn {
                get {
                    return this.columnRatingModelNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sp_052_displayConfirmationRow this[int index] {
                get {
                    return ((sp_052_displayConfirmationRow)(this.Rows[index]));
                }
            }
            
            public event sp_052_displayConfirmationRowChangeEventHandler sp_052_displayConfirmationRowChanging;
            
            public event sp_052_displayConfirmationRowChangeEventHandler sp_052_displayConfirmationRowChanged;
            
            public event sp_052_displayConfirmationRowChangeEventHandler sp_052_displayConfirmationRowDeleting;
            
            public event sp_052_displayConfirmationRowChangeEventHandler sp_052_displayConfirmationRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addsp_052_displayConfirmationRow(sp_052_displayConfirmationRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sp_052_displayConfirmationRow Addsp_052_displayConfirmationRow(
                        int ConfirmationID, 
                        string UtilityName, 
                        string IncentiveName, 
                        string Summary, 
                        string ContactFName, 
                        string ContactLName, 
                        string ContactDept, 
                        string ContactStreet, 
                        string ContactCity, 
                        string ContactState, 
                        string ContactZip, 
                        string ContactPhone, 
                        string ContactWebsite, 
                        string FName, 
                        string LName, 
                        string Street, 
                        string Apartment, 
                        string City, 
                        string State, 
                        string ZIP, 
                        string Phone, 
                        string logonEmail, 
                        string UtilityAccountNumber, 
                        string B_FName, 
                        string B_LName, 
                        string B_Street, 
                        string B_Apartment, 
                        string B_City, 
                        string B_State, 
                        string B_ZIP, 
                        string B_Phone, 
                        string B_email, 
                        string CategoryLabel, 
                        string BrandName, 
                        string RatingModelNumber) {
                sp_052_displayConfirmationRow rowsp_052_displayConfirmationRow = ((sp_052_displayConfirmationRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ConfirmationID,
                        UtilityName,
                        IncentiveName,
                        Summary,
                        ContactFName,
                        ContactLName,
                        ContactDept,
                        ContactStreet,
                        ContactCity,
                        ContactState,
                        ContactZip,
                        ContactPhone,
                        ContactWebsite,
                        FName,
                        LName,
                        Street,
                        Apartment,
                        City,
                        State,
                        ZIP,
                        Phone,
                        logonEmail,
                        UtilityAccountNumber,
                        B_FName,
                        B_LName,
                        B_Street,
                        B_Apartment,
                        B_City,
                        B_State,
                        B_ZIP,
                        B_Phone,
                        B_email,
                        CategoryLabel,
                        BrandName,
                        RatingModelNumber};
                rowsp_052_displayConfirmationRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowsp_052_displayConfirmationRow);
                return rowsp_052_displayConfirmationRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                sp_052_displayConfirmationDataTable cln = ((sp_052_displayConfirmationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new sp_052_displayConfirmationDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnConfirmationID = base.Columns["ConfirmationID"];
                this.columnUtilityName = base.Columns["UtilityName"];
                this.columnIncentiveName = base.Columns["IncentiveName"];
                this.columnSummary = base.Columns["Summary"];
                this.columnContactFName = base.Columns["ContactFName"];
                this.columnContactLName = base.Columns["ContactLName"];
                this.columnContactDept = base.Columns["ContactDept"];
                this.columnContactStreet = base.Columns["ContactStreet"];
                this.columnContactCity = base.Columns["ContactCity"];
                this.columnContactState = base.Columns["ContactState"];
                this.columnContactZip = base.Columns["ContactZip"];
                this.columnContactPhone = base.Columns["ContactPhone"];
                this.columnContactWebsite = base.Columns["ContactWebsite"];
                this.columnFName = base.Columns["FName"];
                this.columnLName = base.Columns["LName"];
                this.columnStreet = base.Columns["Street"];
                this.columnApartment = base.Columns["Apartment"];
                this.columnCity = base.Columns["City"];
                this.columnState = base.Columns["State"];
                this.columnZIP = base.Columns["ZIP"];
                this.columnPhone = base.Columns["Phone"];
                this.columnlogonEmail = base.Columns["logonEmail"];
                this.columnUtilityAccountNumber = base.Columns["UtilityAccountNumber"];
                this.columnB_FName = base.Columns["B_FName"];
                this.columnB_LName = base.Columns["B_LName"];
                this.columnB_Street = base.Columns["B_Street"];
                this.columnB_Apartment = base.Columns["B_Apartment"];
                this.columnB_City = base.Columns["B_City"];
                this.columnB_State = base.Columns["B_State"];
                this.columnB_ZIP = base.Columns["B_ZIP"];
                this.columnB_Phone = base.Columns["B_Phone"];
                this.columnB_email = base.Columns["B_email"];
                this.columnCategoryLabel = base.Columns["CategoryLabel"];
                this.columnBrandName = base.Columns["BrandName"];
                this.columnRatingModelNumber = base.Columns["RatingModelNumber"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnConfirmationID = new global::System.Data.DataColumn("ConfirmationID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConfirmationID);
                this.columnUtilityName = new global::System.Data.DataColumn("UtilityName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUtilityName);
                this.columnIncentiveName = new global::System.Data.DataColumn("IncentiveName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIncentiveName);
                this.columnSummary = new global::System.Data.DataColumn("Summary", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSummary);
                this.columnContactFName = new global::System.Data.DataColumn("ContactFName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactFName);
                this.columnContactLName = new global::System.Data.DataColumn("ContactLName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactLName);
                this.columnContactDept = new global::System.Data.DataColumn("ContactDept", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactDept);
                this.columnContactStreet = new global::System.Data.DataColumn("ContactStreet", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactStreet);
                this.columnContactCity = new global::System.Data.DataColumn("ContactCity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactCity);
                this.columnContactState = new global::System.Data.DataColumn("ContactState", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactState);
                this.columnContactZip = new global::System.Data.DataColumn("ContactZip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactZip);
                this.columnContactPhone = new global::System.Data.DataColumn("ContactPhone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactPhone);
                this.columnContactWebsite = new global::System.Data.DataColumn("ContactWebsite", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactWebsite);
                this.columnFName = new global::System.Data.DataColumn("FName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFName);
                this.columnLName = new global::System.Data.DataColumn("LName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLName);
                this.columnStreet = new global::System.Data.DataColumn("Street", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStreet);
                this.columnApartment = new global::System.Data.DataColumn("Apartment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApartment);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnState = new global::System.Data.DataColumn("State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnZIP = new global::System.Data.DataColumn("ZIP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZIP);
                this.columnPhone = new global::System.Data.DataColumn("Phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone);
                this.columnlogonEmail = new global::System.Data.DataColumn("logonEmail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlogonEmail);
                this.columnUtilityAccountNumber = new global::System.Data.DataColumn("UtilityAccountNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUtilityAccountNumber);
                this.columnB_FName = new global::System.Data.DataColumn("B_FName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnB_FName);
                this.columnB_LName = new global::System.Data.DataColumn("B_LName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnB_LName);
                this.columnB_Street = new global::System.Data.DataColumn("B_Street", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnB_Street);
                this.columnB_Apartment = new global::System.Data.DataColumn("B_Apartment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnB_Apartment);
                this.columnB_City = new global::System.Data.DataColumn("B_City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnB_City);
                this.columnB_State = new global::System.Data.DataColumn("B_State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnB_State);
                this.columnB_ZIP = new global::System.Data.DataColumn("B_ZIP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnB_ZIP);
                this.columnB_Phone = new global::System.Data.DataColumn("B_Phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnB_Phone);
                this.columnB_email = new global::System.Data.DataColumn("B_email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnB_email);
                this.columnCategoryLabel = new global::System.Data.DataColumn("CategoryLabel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategoryLabel);
                this.columnBrandName = new global::System.Data.DataColumn("BrandName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrandName);
                this.columnRatingModelNumber = new global::System.Data.DataColumn("RatingModelNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRatingModelNumber);
                this.columnConfirmationID.ReadOnly = true;
                this.columnUtilityName.ReadOnly = true;
                this.columnUtilityName.MaxLength = 50;
                this.columnIncentiveName.ReadOnly = true;
                this.columnIncentiveName.MaxLength = 50;
                this.columnSummary.ReadOnly = true;
                this.columnSummary.MaxLength = 50;
                this.columnContactFName.ReadOnly = true;
                this.columnContactFName.MaxLength = 50;
                this.columnContactLName.ReadOnly = true;
                this.columnContactLName.MaxLength = 50;
                this.columnContactDept.ReadOnly = true;
                this.columnContactDept.MaxLength = 250;
                this.columnContactStreet.ReadOnly = true;
                this.columnContactStreet.MaxLength = 50;
                this.columnContactCity.ReadOnly = true;
                this.columnContactCity.MaxLength = 50;
                this.columnContactState.ReadOnly = true;
                this.columnContactState.MaxLength = 50;
                this.columnContactZip.ReadOnly = true;
                this.columnContactZip.MaxLength = 50;
                this.columnContactPhone.ReadOnly = true;
                this.columnContactPhone.MaxLength = 50;
                this.columnContactWebsite.ReadOnly = true;
                this.columnContactWebsite.MaxLength = 250;
                this.columnFName.ReadOnly = true;
                this.columnFName.MaxLength = 50;
                this.columnLName.ReadOnly = true;
                this.columnLName.MaxLength = 50;
                this.columnStreet.ReadOnly = true;
                this.columnStreet.MaxLength = 50;
                this.columnApartment.ReadOnly = true;
                this.columnApartment.MaxLength = 50;
                this.columnCity.ReadOnly = true;
                this.columnCity.MaxLength = 50;
                this.columnState.ReadOnly = true;
                this.columnState.MaxLength = 50;
                this.columnZIP.ReadOnly = true;
                this.columnZIP.MaxLength = 50;
                this.columnPhone.ReadOnly = true;
                this.columnPhone.MaxLength = 50;
                this.columnlogonEmail.ReadOnly = true;
                this.columnlogonEmail.MaxLength = 50;
                this.columnUtilityAccountNumber.ReadOnly = true;
                this.columnUtilityAccountNumber.MaxLength = 50;
                this.columnB_FName.ReadOnly = true;
                this.columnB_FName.MaxLength = 50;
                this.columnB_LName.ReadOnly = true;
                this.columnB_LName.MaxLength = 50;
                this.columnB_Street.ReadOnly = true;
                this.columnB_Street.MaxLength = 50;
                this.columnB_Apartment.ReadOnly = true;
                this.columnB_Apartment.MaxLength = 50;
                this.columnB_City.ReadOnly = true;
                this.columnB_City.MaxLength = 50;
                this.columnB_State.ReadOnly = true;
                this.columnB_State.MaxLength = 50;
                this.columnB_ZIP.ReadOnly = true;
                this.columnB_ZIP.MaxLength = 50;
                this.columnB_Phone.ReadOnly = true;
                this.columnB_Phone.MaxLength = 50;
                this.columnB_email.ReadOnly = true;
                this.columnB_email.MaxLength = 50;
                this.columnCategoryLabel.ReadOnly = true;
                this.columnCategoryLabel.MaxLength = 50;
                this.columnBrandName.ReadOnly = true;
                this.columnBrandName.MaxLength = 50;
                this.columnRatingModelNumber.ReadOnly = true;
                this.columnRatingModelNumber.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sp_052_displayConfirmationRow Newsp_052_displayConfirmationRow() {
                return ((sp_052_displayConfirmationRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new sp_052_displayConfirmationRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(sp_052_displayConfirmationRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.sp_052_displayConfirmationRowChanged != null)) {
                    this.sp_052_displayConfirmationRowChanged(this, new sp_052_displayConfirmationRowChangeEvent(((sp_052_displayConfirmationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.sp_052_displayConfirmationRowChanging != null)) {
                    this.sp_052_displayConfirmationRowChanging(this, new sp_052_displayConfirmationRowChangeEvent(((sp_052_displayConfirmationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.sp_052_displayConfirmationRowDeleted != null)) {
                    this.sp_052_displayConfirmationRowDeleted(this, new sp_052_displayConfirmationRowChangeEvent(((sp_052_displayConfirmationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.sp_052_displayConfirmationRowDeleting != null)) {
                    this.sp_052_displayConfirmationRowDeleting(this, new sp_052_displayConfirmationRowChangeEvent(((sp_052_displayConfirmationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removesp_052_displayConfirmationRow(sp_052_displayConfirmationRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Misc ds = new Misc();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "sp_052_displayConfirmationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class sp_053_list_confirmationsRow : global::System.Data.DataRow {
            
            private sp_053_list_confirmationsDataTable tablesp_053_list_confirmations;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sp_053_list_confirmationsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesp_053_list_confirmations = ((sp_053_list_confirmationsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ConfirmationID {
                get {
                    return ((int)(this[this.tablesp_053_list_confirmations.ConfirmationIDColumn]));
                }
                set {
                    this[this.tablesp_053_list_confirmations.ConfirmationIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CategoryLabel {
                get {
                    try {
                        return ((string)(this[this.tablesp_053_list_confirmations.CategoryLabelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CategoryLabel\' in table \'sp_053_list_confirmations\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablesp_053_list_confirmations.CategoryLabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BrandName {
                get {
                    try {
                        return ((string)(this[this.tablesp_053_list_confirmations.BrandNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BrandName\' in table \'sp_053_list_confirmations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_053_list_confirmations.BrandNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RebateAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablesp_053_list_confirmations.RebateAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RebateAmount\' in table \'sp_053_list_confirmations\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablesp_053_list_confirmations.RebateAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime UpdateDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablesp_053_list_confirmations.UpdateDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdateDate\' in table \'sp_053_list_confirmations\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablesp_053_list_confirmations.UpdateDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCategoryLabelNull() {
                return this.IsNull(this.tablesp_053_list_confirmations.CategoryLabelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCategoryLabelNull() {
                this[this.tablesp_053_list_confirmations.CategoryLabelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBrandNameNull() {
                return this.IsNull(this.tablesp_053_list_confirmations.BrandNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBrandNameNull() {
                this[this.tablesp_053_list_confirmations.BrandNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRebateAmountNull() {
                return this.IsNull(this.tablesp_053_list_confirmations.RebateAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRebateAmountNull() {
                this[this.tablesp_053_list_confirmations.RebateAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdateDateNull() {
                return this.IsNull(this.tablesp_053_list_confirmations.UpdateDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdateDateNull() {
                this[this.tablesp_053_list_confirmations.UpdateDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class sp_051_create_confirmationRecordRow : global::System.Data.DataRow {
            
            private sp_051_create_confirmationRecordDataTable tablesp_051_create_confirmationRecord;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sp_051_create_confirmationRecordRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesp_051_create_confirmationRecord = ((sp_051_create_confirmationRecordDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ConfirmationID {
                get {
                    return ((int)(this[this.tablesp_051_create_confirmationRecord.ConfirmationIDColumn]));
                }
                set {
                    this[this.tablesp_051_create_confirmationRecord.ConfirmationIDColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class sp_052_displayConfirmationRow : global::System.Data.DataRow {
            
            private sp_052_displayConfirmationDataTable tablesp_052_displayConfirmation;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sp_052_displayConfirmationRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesp_052_displayConfirmation = ((sp_052_displayConfirmationDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ConfirmationID {
                get {
                    try {
                        return ((int)(this[this.tablesp_052_displayConfirmation.ConfirmationIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConfirmationID\' in table \'sp_052_displayConfirmation\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablesp_052_displayConfirmation.ConfirmationIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UtilityName {
                get {
                    try {
                        return ((string)(this[this.tablesp_052_displayConfirmation.UtilityNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UtilityName\' in table \'sp_052_displayConfirmation\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablesp_052_displayConfirmation.UtilityNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IncentiveName {
                get {
                    try {
                        return ((string)(this[this.tablesp_052_displayConfirmation.IncentiveNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IncentiveName\' in table \'sp_052_displayConfirmation\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablesp_052_displayConfirmation.IncentiveNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Summary {
                get {
                    try {
                        return ((string)(this[this.tablesp_052_displayConfirmation.SummaryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Summary\' in table \'sp_052_displayConfirmation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_052_displayConfirmation.SummaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContactFName {
                get {
                    try {
                        return ((string)(this[this.tablesp_052_displayConfirmation.ContactFNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactFName\' in table \'sp_052_displayConfirmation\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablesp_052_displayConfirmation.ContactFNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContactLName {
                get {
                    try {
                        return ((string)(this[this.tablesp_052_displayConfirmation.ContactLNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactLName\' in table \'sp_052_displayConfirmation\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablesp_052_displayConfirmation.ContactLNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContactDept {
                get {
                    try {
                        return ((string)(this[this.tablesp_052_displayConfirmation.ContactDeptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactDept\' in table \'sp_052_displayConfirmation\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablesp_052_displayConfirmation.ContactDeptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContactStreet {
                get {
                    try {
                        return ((string)(this[this.tablesp_052_displayConfirmation.ContactStreetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactStreet\' in table \'sp_052_displayConfirmation\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablesp_052_displayConfirmation.ContactStreetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContactCity {
                get {
                    try {
                        return ((string)(this[this.tablesp_052_displayConfirmation.ContactCityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactCity\' in table \'sp_052_displayConfirmation\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablesp_052_displayConfirmation.ContactCityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContactState {
                get {
                    try {
                        return ((string)(this[this.tablesp_052_displayConfirmation.ContactStateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactState\' in table \'sp_052_displayConfirmation\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablesp_052_displayConfirmation.ContactStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContactZip {
                get {
                    try {
                        return ((string)(this[this.tablesp_052_displayConfirmation.ContactZipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactZip\' in table \'sp_052_displayConfirmation\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablesp_052_displayConfirmation.ContactZipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContactPhone {
                get {
                    try {
                        return ((string)(this[this.tablesp_052_displayConfirmation.ContactPhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactPhone\' in table \'sp_052_displayConfirmation\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablesp_052_displayConfirmation.ContactPhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContactWebsite {
                get {
                    try {
                        return ((string)(this[this.tablesp_052_displayConfirmation.ContactWebsiteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactWebsite\' in table \'sp_052_displayConfirmation\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablesp_052_displayConfirmation.ContactWebsiteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FName {
                get {
                    try {
                        return ((string)(this[this.tablesp_052_displayConfirmation.FNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FName\' in table \'sp_052_displayConfirmation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_052_displayConfirmation.FNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LName {
                get {
                    try {
                        return ((string)(this[this.tablesp_052_displayConfirmation.LNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LName\' in table \'sp_052_displayConfirmation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_052_displayConfirmation.LNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Street {
                get {
                    try {
                        return ((string)(this[this.tablesp_052_displayConfirmation.StreetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Street\' in table \'sp_052_displayConfirmation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_052_displayConfirmation.StreetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Apartment {
                get {
                    try {
                        return ((string)(this[this.tablesp_052_displayConfirmation.ApartmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Apartment\' in table \'sp_052_displayConfirmation\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablesp_052_displayConfirmation.ApartmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string City {
                get {
                    try {
                        return ((string)(this[this.tablesp_052_displayConfirmation.CityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'City\' in table \'sp_052_displayConfirmation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_052_displayConfirmation.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string State {
                get {
                    try {
                        return ((string)(this[this.tablesp_052_displayConfirmation.StateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'State\' in table \'sp_052_displayConfirmation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_052_displayConfirmation.StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ZIP {
                get {
                    try {
                        return ((string)(this[this.tablesp_052_displayConfirmation.ZIPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ZIP\' in table \'sp_052_displayConfirmation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_052_displayConfirmation.ZIPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone {
                get {
                    try {
                        return ((string)(this[this.tablesp_052_displayConfirmation.PhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Phone\' in table \'sp_052_displayConfirmation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_052_displayConfirmation.PhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string logonEmail {
                get {
                    try {
                        return ((string)(this[this.tablesp_052_displayConfirmation.logonEmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'logonEmail\' in table \'sp_052_displayConfirmation\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablesp_052_displayConfirmation.logonEmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UtilityAccountNumber {
                get {
                    try {
                        return ((string)(this[this.tablesp_052_displayConfirmation.UtilityAccountNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UtilityAccountNumber\' in table \'sp_052_displayConfirmation\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_052_displayConfirmation.UtilityAccountNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string B_FName {
                get {
                    try {
                        return ((string)(this[this.tablesp_052_displayConfirmation.B_FNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'B_FName\' in table \'sp_052_displayConfirmation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_052_displayConfirmation.B_FNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string B_LName {
                get {
                    try {
                        return ((string)(this[this.tablesp_052_displayConfirmation.B_LNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'B_LName\' in table \'sp_052_displayConfirmation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_052_displayConfirmation.B_LNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string B_Street {
                get {
                    try {
                        return ((string)(this[this.tablesp_052_displayConfirmation.B_StreetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'B_Street\' in table \'sp_052_displayConfirmation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_052_displayConfirmation.B_StreetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string B_Apartment {
                get {
                    try {
                        return ((string)(this[this.tablesp_052_displayConfirmation.B_ApartmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'B_Apartment\' in table \'sp_052_displayConfirmation\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablesp_052_displayConfirmation.B_ApartmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string B_City {
                get {
                    try {
                        return ((string)(this[this.tablesp_052_displayConfirmation.B_CityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'B_City\' in table \'sp_052_displayConfirmation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_052_displayConfirmation.B_CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string B_State {
                get {
                    try {
                        return ((string)(this[this.tablesp_052_displayConfirmation.B_StateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'B_State\' in table \'sp_052_displayConfirmation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_052_displayConfirmation.B_StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string B_ZIP {
                get {
                    try {
                        return ((string)(this[this.tablesp_052_displayConfirmation.B_ZIPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'B_ZIP\' in table \'sp_052_displayConfirmation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_052_displayConfirmation.B_ZIPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string B_Phone {
                get {
                    try {
                        return ((string)(this[this.tablesp_052_displayConfirmation.B_PhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'B_Phone\' in table \'sp_052_displayConfirmation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_052_displayConfirmation.B_PhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string B_email {
                get {
                    try {
                        return ((string)(this[this.tablesp_052_displayConfirmation.B_emailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'B_email\' in table \'sp_052_displayConfirmation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_052_displayConfirmation.B_emailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CategoryLabel {
                get {
                    try {
                        return ((string)(this[this.tablesp_052_displayConfirmation.CategoryLabelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CategoryLabel\' in table \'sp_052_displayConfirmation\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablesp_052_displayConfirmation.CategoryLabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BrandName {
                get {
                    try {
                        return ((string)(this[this.tablesp_052_displayConfirmation.BrandNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BrandName\' in table \'sp_052_displayConfirmation\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablesp_052_displayConfirmation.BrandNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RatingModelNumber {
                get {
                    try {
                        return ((string)(this[this.tablesp_052_displayConfirmation.RatingModelNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RatingModelNumber\' in table \'sp_052_displayConfirmation\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_052_displayConfirmation.RatingModelNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConfirmationIDNull() {
                return this.IsNull(this.tablesp_052_displayConfirmation.ConfirmationIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConfirmationIDNull() {
                this[this.tablesp_052_displayConfirmation.ConfirmationIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUtilityNameNull() {
                return this.IsNull(this.tablesp_052_displayConfirmation.UtilityNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUtilityNameNull() {
                this[this.tablesp_052_displayConfirmation.UtilityNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIncentiveNameNull() {
                return this.IsNull(this.tablesp_052_displayConfirmation.IncentiveNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIncentiveNameNull() {
                this[this.tablesp_052_displayConfirmation.IncentiveNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSummaryNull() {
                return this.IsNull(this.tablesp_052_displayConfirmation.SummaryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSummaryNull() {
                this[this.tablesp_052_displayConfirmation.SummaryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactFNameNull() {
                return this.IsNull(this.tablesp_052_displayConfirmation.ContactFNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactFNameNull() {
                this[this.tablesp_052_displayConfirmation.ContactFNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactLNameNull() {
                return this.IsNull(this.tablesp_052_displayConfirmation.ContactLNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactLNameNull() {
                this[this.tablesp_052_displayConfirmation.ContactLNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactDeptNull() {
                return this.IsNull(this.tablesp_052_displayConfirmation.ContactDeptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactDeptNull() {
                this[this.tablesp_052_displayConfirmation.ContactDeptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactStreetNull() {
                return this.IsNull(this.tablesp_052_displayConfirmation.ContactStreetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactStreetNull() {
                this[this.tablesp_052_displayConfirmation.ContactStreetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactCityNull() {
                return this.IsNull(this.tablesp_052_displayConfirmation.ContactCityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactCityNull() {
                this[this.tablesp_052_displayConfirmation.ContactCityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactStateNull() {
                return this.IsNull(this.tablesp_052_displayConfirmation.ContactStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactStateNull() {
                this[this.tablesp_052_displayConfirmation.ContactStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactZipNull() {
                return this.IsNull(this.tablesp_052_displayConfirmation.ContactZipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactZipNull() {
                this[this.tablesp_052_displayConfirmation.ContactZipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactPhoneNull() {
                return this.IsNull(this.tablesp_052_displayConfirmation.ContactPhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactPhoneNull() {
                this[this.tablesp_052_displayConfirmation.ContactPhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactWebsiteNull() {
                return this.IsNull(this.tablesp_052_displayConfirmation.ContactWebsiteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactWebsiteNull() {
                this[this.tablesp_052_displayConfirmation.ContactWebsiteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFNameNull() {
                return this.IsNull(this.tablesp_052_displayConfirmation.FNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFNameNull() {
                this[this.tablesp_052_displayConfirmation.FNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLNameNull() {
                return this.IsNull(this.tablesp_052_displayConfirmation.LNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLNameNull() {
                this[this.tablesp_052_displayConfirmation.LNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStreetNull() {
                return this.IsNull(this.tablesp_052_displayConfirmation.StreetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStreetNull() {
                this[this.tablesp_052_displayConfirmation.StreetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApartmentNull() {
                return this.IsNull(this.tablesp_052_displayConfirmation.ApartmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApartmentNull() {
                this[this.tablesp_052_displayConfirmation.ApartmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityNull() {
                return this.IsNull(this.tablesp_052_displayConfirmation.CityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityNull() {
                this[this.tablesp_052_displayConfirmation.CityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStateNull() {
                return this.IsNull(this.tablesp_052_displayConfirmation.StateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStateNull() {
                this[this.tablesp_052_displayConfirmation.StateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZIPNull() {
                return this.IsNull(this.tablesp_052_displayConfirmation.ZIPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZIPNull() {
                this[this.tablesp_052_displayConfirmation.ZIPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhoneNull() {
                return this.IsNull(this.tablesp_052_displayConfirmation.PhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhoneNull() {
                this[this.tablesp_052_displayConfirmation.PhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslogonEmailNull() {
                return this.IsNull(this.tablesp_052_displayConfirmation.logonEmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlogonEmailNull() {
                this[this.tablesp_052_displayConfirmation.logonEmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUtilityAccountNumberNull() {
                return this.IsNull(this.tablesp_052_displayConfirmation.UtilityAccountNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUtilityAccountNumberNull() {
                this[this.tablesp_052_displayConfirmation.UtilityAccountNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsB_FNameNull() {
                return this.IsNull(this.tablesp_052_displayConfirmation.B_FNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetB_FNameNull() {
                this[this.tablesp_052_displayConfirmation.B_FNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsB_LNameNull() {
                return this.IsNull(this.tablesp_052_displayConfirmation.B_LNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetB_LNameNull() {
                this[this.tablesp_052_displayConfirmation.B_LNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsB_StreetNull() {
                return this.IsNull(this.tablesp_052_displayConfirmation.B_StreetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetB_StreetNull() {
                this[this.tablesp_052_displayConfirmation.B_StreetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsB_ApartmentNull() {
                return this.IsNull(this.tablesp_052_displayConfirmation.B_ApartmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetB_ApartmentNull() {
                this[this.tablesp_052_displayConfirmation.B_ApartmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsB_CityNull() {
                return this.IsNull(this.tablesp_052_displayConfirmation.B_CityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetB_CityNull() {
                this[this.tablesp_052_displayConfirmation.B_CityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsB_StateNull() {
                return this.IsNull(this.tablesp_052_displayConfirmation.B_StateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetB_StateNull() {
                this[this.tablesp_052_displayConfirmation.B_StateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsB_ZIPNull() {
                return this.IsNull(this.tablesp_052_displayConfirmation.B_ZIPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetB_ZIPNull() {
                this[this.tablesp_052_displayConfirmation.B_ZIPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsB_PhoneNull() {
                return this.IsNull(this.tablesp_052_displayConfirmation.B_PhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetB_PhoneNull() {
                this[this.tablesp_052_displayConfirmation.B_PhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsB_emailNull() {
                return this.IsNull(this.tablesp_052_displayConfirmation.B_emailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetB_emailNull() {
                this[this.tablesp_052_displayConfirmation.B_emailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCategoryLabelNull() {
                return this.IsNull(this.tablesp_052_displayConfirmation.CategoryLabelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCategoryLabelNull() {
                this[this.tablesp_052_displayConfirmation.CategoryLabelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBrandNameNull() {
                return this.IsNull(this.tablesp_052_displayConfirmation.BrandNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBrandNameNull() {
                this[this.tablesp_052_displayConfirmation.BrandNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRatingModelNumberNull() {
                return this.IsNull(this.tablesp_052_displayConfirmation.RatingModelNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRatingModelNumberNull() {
                this[this.tablesp_052_displayConfirmation.RatingModelNumberColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class sp_053_list_confirmationsRowChangeEvent : global::System.EventArgs {
            
            private sp_053_list_confirmationsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sp_053_list_confirmationsRowChangeEvent(sp_053_list_confirmationsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sp_053_list_confirmationsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class sp_051_create_confirmationRecordRowChangeEvent : global::System.EventArgs {
            
            private sp_051_create_confirmationRecordRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sp_051_create_confirmationRecordRowChangeEvent(sp_051_create_confirmationRecordRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sp_051_create_confirmationRecordRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class sp_052_displayConfirmationRowChangeEvent : global::System.EventArgs {
            
            private sp_052_displayConfirmationRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sp_052_displayConfirmationRowChangeEvent(sp_052_displayConfirmationRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sp_052_displayConfirmationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace PilotDL.MiscTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class sp_053_list_confirmationsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sp_053_list_confirmationsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "sp_053_list_confirmations";
            tableMapping.ColumnMappings.Add("ConfirmationID", "ConfirmationID");
            tableMapping.ColumnMappings.Add("CategoryLabel", "CategoryLabel");
            tableMapping.ColumnMappings.Add("BrandName", "BrandName");
            tableMapping.ColumnMappings.Add("RebateAmount", "RebateAmount");
            tableMapping.ColumnMappings.Add("UpdateDate", "UpdateDate");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::PilotDL.Properties.Settings.Default.susConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.sp_053_list_confirmations";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "dbo.sp_053_list_confirmations";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Misc.sp_053_list_confirmationsDataTable GetAllConfirmations() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Misc.sp_053_list_confirmationsDataTable dataTable = new Misc.sp_053_list_confirmationsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(Misc.sp_053_list_confirmationsDataTable dataTable, global::System.Nullable<int> UserID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((UserID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(UserID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual Misc.sp_053_list_confirmationsDataTable GetMyConfirmations(global::System.Nullable<int> UserID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((UserID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(UserID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            Misc.sp_053_list_confirmationsDataTable dataTable = new Misc.sp_053_list_confirmationsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class sp_051_create_confirmationRecordTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sp_051_create_confirmationRecordTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "sp_051_create_confirmationRecord";
            tableMapping.ColumnMappings.Add("ConfirmationID", "ConfirmationID");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::PilotDL.Properties.Settings.Default.susConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.sp_051_create_confirmationRecord";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TdxTermsID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RatingModelTdxID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RebateAmount", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 2, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Misc.sp_051_create_confirmationRecordDataTable InsertAndGetConfirmationID(global::System.Nullable<int> UserID, global::System.Nullable<int> TdxTermsID, global::System.Nullable<int> RatingModelTdxID, global::System.Nullable<decimal> RebateAmount) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((UserID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(UserID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((TdxTermsID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(TdxTermsID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((RatingModelTdxID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(RatingModelTdxID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((RebateAmount.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((decimal)(RebateAmount.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            Misc.sp_051_create_confirmationRecordDataTable dataTable = new Misc.sp_051_create_confirmationRecordDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class sp_052_displayConfirmationTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sp_052_displayConfirmationTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "sp_052_displayConfirmation";
            tableMapping.ColumnMappings.Add("ConfirmationID", "ConfirmationID");
            tableMapping.ColumnMappings.Add("UtilityName", "UtilityName");
            tableMapping.ColumnMappings.Add("IncentiveName", "IncentiveName");
            tableMapping.ColumnMappings.Add("Summary", "Summary");
            tableMapping.ColumnMappings.Add("ContactFName", "ContactFName");
            tableMapping.ColumnMappings.Add("ContactLName", "ContactLName");
            tableMapping.ColumnMappings.Add("ContactDept", "ContactDept");
            tableMapping.ColumnMappings.Add("ContactStreet", "ContactStreet");
            tableMapping.ColumnMappings.Add("ContactCity", "ContactCity");
            tableMapping.ColumnMappings.Add("ContactState", "ContactState");
            tableMapping.ColumnMappings.Add("ContactZip", "ContactZip");
            tableMapping.ColumnMappings.Add("ContactPhone", "ContactPhone");
            tableMapping.ColumnMappings.Add("ContactWebsite", "ContactWebsite");
            tableMapping.ColumnMappings.Add("FName", "FName");
            tableMapping.ColumnMappings.Add("LName", "LName");
            tableMapping.ColumnMappings.Add("Street", "Street");
            tableMapping.ColumnMappings.Add("Apartment", "Apartment");
            tableMapping.ColumnMappings.Add("City", "City");
            tableMapping.ColumnMappings.Add("State", "State");
            tableMapping.ColumnMappings.Add("ZIP", "ZIP");
            tableMapping.ColumnMappings.Add("Phone", "Phone");
            tableMapping.ColumnMappings.Add("logonEmail", "logonEmail");
            tableMapping.ColumnMappings.Add("UtilityAccountNumber", "UtilityAccountNumber");
            tableMapping.ColumnMappings.Add("B_FName", "B_FName");
            tableMapping.ColumnMappings.Add("B_LName", "B_LName");
            tableMapping.ColumnMappings.Add("B_Street", "B_Street");
            tableMapping.ColumnMappings.Add("B_Apartment", "B_Apartment");
            tableMapping.ColumnMappings.Add("B_City", "B_City");
            tableMapping.ColumnMappings.Add("B_State", "B_State");
            tableMapping.ColumnMappings.Add("B_ZIP", "B_ZIP");
            tableMapping.ColumnMappings.Add("B_Phone", "B_Phone");
            tableMapping.ColumnMappings.Add("B_email", "B_email");
            tableMapping.ColumnMappings.Add("CategoryLabel", "CategoryLabel");
            tableMapping.ColumnMappings.Add("BrandName", "BrandName");
            tableMapping.ColumnMappings.Add("RatingModelNumber", "RatingModelNumber");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::PilotDL.Properties.Settings.Default.susConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.sp_052_displayConfirmation";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConfirmationID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Misc.sp_052_displayConfirmationDataTable GetConfirmationDetails(global::System.Nullable<int> ConfirmationID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((ConfirmationID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(ConfirmationID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            Misc.sp_052_displayConfirmationDataTable dataTable = new Misc.sp_052_displayConfirmationDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(Misc dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(Misc dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(Misc dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(Misc dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591